name: Reusable Documentation Publish

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: false
        type: string
        default: '3.12'
      requirements-file:
        description: 'Path to requirements file'
        required: false
        type: string
        default: 'requirements-docs.txt'
      build-command:
        description: 'Command to build documentation'
        required: false
        type: string
        default: 'mkdocs build --strict --site-dir site'
      pages-repository:
        description: 'Repository to deploy to'
        required: true
        type: string
      pages-branch:
        description: 'Branch to deploy to in pages repo'
        required: false
        type: string
        default: 'master'
      publish-path:
        description: 'Path within pages repo to publish to'
        required: true
        type: string
      allowed-repositories:
        description: 'Comma-separated list of repos allowed to deploy'
        required: true
        type: string
      artifact-retention-days:
        description: 'Days to retain build artifact'
        required: false
        type: number
        default: 7

jobs:
  build-and-deploy:
    if: contains(inputs.allowed-repositories, github.repository)
    runs-on: cpu-runners
    container:
      image: python:${{ inputs.python-version }}-slim
      options: --user root
    permissions:
      contents: read
    env:
      PUBLISH_PATH: ${{ inputs.publish-path }}
      DOCS_TOKEN: ${{ secrets.DOCS_DEPLOY }}
      PAGES_REPO: ${{ inputs.pages-repository }}
      PAGES_BRANCH: ${{ inputs.pages-branch }}
    steps:
      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y git rsync curl
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config --global --add safe.directory '*'

      - name: Checkout source repo
        uses: actions/checkout@v4

      - name: Install MkDocs + plugins
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ inputs.requirements-file }}
    
      - name: Build site
        run: ${{ inputs.build-command }}

      - name: Upload built site (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: site-${{ github.run_id }}
          path: site
          if-no-files-found: error
          retention-days: ${{ inputs.artifact-retention-days }}

      - name: Clone Pages repo
        run: |
          echo "Setting up pages repository..."
          mkdir pages
          cd pages
          git init
          git remote add origin "https://github.com/${PAGES_REPO}.git"
          git config http."https://github.com/".extraheader "AUTHORIZATION: bearer ${DOCS_TOKEN}"
          echo "Fetching ${PAGES_BRANCH} branch..."
          git fetch origin "${PAGES_BRANCH}"
          git checkout "${PAGES_BRANCH}"
          echo "‚úÖ Successfully setup pages repository"

      - name: Sync built site
        run: |
          set -euo pipefail
          mkdir -p "pages/${PUBLISH_PATH}"
          rsync -a --delete site/ "pages/${PUBLISH_PATH}/"
          echo "‚úÖ Site synced to pages/${PUBLISH_PATH}"

      - name: Commit and push changes
        run: |
          set -euo pipefail
          cd pages
          
          if [ -n "$(git status --porcelain)" ]; then
            echo "üìù Changes detected, committing..."
            git add -A
            git commit -m "Publish docs from ${GITHUB_REPOSITORY}@${GITHUB_SHA:0:7}"
            git config http."https://github.com/".extraheader "AUTHORIZATION: bearer ${DOCS_TOKEN}"
            git push origin "${PAGES_BRANCH}"
            echo "‚úÖ Successfully published to ${PAGES_REPO}"
          else
            echo "‚ÑπÔ∏è No changes to publish"
          fi
