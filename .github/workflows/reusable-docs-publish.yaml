name: Reusable Documentation Publish

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: false
        type: string
        default: '3.x'
      requirements-file:
        description: 'Path to requirements file'
        required: false
        type: string
        default: 'requirements-docs.txt'
      build-command:
        description: 'Command to build documentation'
        required: false
        type: string
        default: 'mkdocs build --strict --site-dir site'
      pages-repository:
        description: 'Repository to deploy to'
        required: true
        type: string
      pages-branch:
        description: 'Branch to deploy to in pages repo'
        required: false
        type: string
        default: 'master'
      publish-path:
        description: 'Path within pages repo to publish to'
        required: true
        type: string
      allowed-repositories:
        description: 'Comma-separated list of repos allowed to deploy'
        required: true
        type: string
      artifact-retention-days:
        description: 'Days to retain build artifact'
        required: false
        type: number
        default: 7
    secrets:
      deploy-token:
        description: 'GitHub token with write access to pages repository'
        required: true

jobs:
  build-and-deploy:
    if: contains(inputs.allowed-repositories, github.repository)
    runs-on: [ self-hosted, cpu-only, Linux, X64 ]  # Your ARC runner labels
    # NO CONTAINER DIRECTIVE HERE - this is the key change
    permissions:
      contents: read
    env:
      PUBLISH_PATH: ${{ inputs.publish-path }}
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install MkDocs + plugins
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ inputs.requirements-file }}
    
      - name: Build site
        run: ${{ inputs.build-command }}

      - name: Upload built site (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: site-${{ github.run_id }}
          path: site
          if-no-files-found: error
          retention-days: ${{ inputs.artifact-retention-days }}

      - name: Checkout Pages repo (production)
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.pages-repository }}
          ref: ${{ inputs.pages-branch }}
          token: ${{ secrets.deploy-token }}
          path: pages

      - name: Sync built site into /${{ env.PUBLISH_PATH }}
        run: |
          set -euo pipefail
          mkdir -p "pages/${{ env.PUBLISH_PATH }}"
          rsync -a --delete site/ "pages/${{ env.PUBLISH_PATH }}/"

      - name: Commit & push to ${{ inputs.pages-branch }} (Pages repo)
        run: |
          set -euo pipefail
          cd pages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "Publish docs from ${GITHUB_REPOSITORY}@${GITHUB_SHA}"
            git push origin ${{ inputs.pages-branch }}
            echo "✅ Successfully published to ${{ inputs.pages-repository }}"
          else
            echo "ℹ️ No changes to publish."
          fi
