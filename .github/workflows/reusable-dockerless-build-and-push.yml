name: Reusable Dockerless Build and Push

on:
  workflow_call:
    inputs:
      dockerfile:
        required: false
        type: string 
        default: 'Dockerfile'
        description: 'Path to the dockerfile'
      build_target:
        required: false
        type: string
        default: ''
        description: 'Build target for multi-stage builds (e.g., ci, production)'
      registry: 
        required: true
        type: string 
        description: 'Container registry URL'
      image_name: 
        required: true
        type: string
        description: 'Image name (without the registry)'
      runner_label: 
        required: false
        type: string 
        default: 'gpu-runners'
        description: 'Runner label to use'
    secrets:
      registry_username:
        required: true
      registry_password: 
        required: true 

env:
  REGISTRY: ${{ inputs.registry }}
  IMAGE_NAME: ${{ inputs.image_name }}
  STORAGE_DRIVER: overlay
  BUILDAH_ISOLATION: chroot
  DOCKERFILE: ${{ inputs.dockerfile }}
  BUILD_TARGET: ${{ inputs.build_target }}

jobs:
  build-and-push:
    runs-on: ${{ inputs.runner_label }}
    container:
      image: quay.io/buildah/stable:latest
      options: >-
        --user 0
        --privileged
        --security-opt seccomp=unconfined
        --security-opt apparmor=unconfined
        --device /dev/fuse
        --cap-add SYS_ADMIN
        --cap-add SYS_CHROOT
        --cap-add SETUID
        --cap-add SETGID
    
    steps:
      - name: Checkout calling repository
        uses: actions/checkout@v5
      
      - name: DEBUG - Check if checkout worked
        run: |
          echo "==== DEBUG: After First Checkout ===="
          echo "Current directory: $(pwd)"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo ""
          echo "Contents of current directory:"
          ls -la || echo "ls failed!"
          echo ""
          echo "Does Dockerfile exist here?"
          [ -f Dockerfile ] && echo "YES - Dockerfile found!" || echo "NO - Dockerfile NOT found!"
          echo ""
          echo "Contents of /:"
          ls -la / || echo "Can't list /"
          echo ""
          echo "Contents of /__w:"
          ls -la /__w 2>/dev/null || echo "/__w doesn't exist"
          echo ""
          echo "Contents of /__w/workflow-tests:"
          ls -la /__w/workflow-tests 2>/dev/null || echo "/__w/workflow-tests doesn't exist"
          echo ""
          echo "Contents of /__w/workflow-tests/workflow-tests:"
          ls -la /__w/workflow-tests/workflow-tests 2>/dev/null || echo "/__w/workflow-tests/workflow-tests doesn't exist"
      
      - name: Checkout .github repo for scripts
        uses: actions/checkout@v5
        with:
          repository: Naio-SWE/.github
          path: .github-repo
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: DEBUG - Check after second checkout
        run: |
          echo "==== DEBUG: After Second Checkout ===="
          echo "Current directory: $(pwd)"
          ls -la
          echo ""
          echo ".github-repo exists?"
          [ -d .github-repo ] && echo "YES" || echo "NO"
          echo ""
          echo "Contents of .github-repo:"
          ls -la .github-repo 2>/dev/null || echo ".github-repo doesn't exist"
      
      - name: Show environment info
        run: ./.github-repo/scripts/dockerless-build-action/show-env.sh
      
      - name: Configure Buildah storage
        run: ./.github-repo/scripts/dockerless-build-action/configure-storage.sh
      
      - name: Login to registry
        env:
          REGISTRY_USERNAME: ${{ secrets.registry_username }}
          REGISTRY_PASSWORD: ${{ secrets.registry_password }}
        run: ./.github-repo/scripts/dockerless-build-action/registry-login.sh
      
      - name: DEBUG - Right before build
        run: |
          echo "==== DEBUG: Right Before Build ===="
          echo "Current directory: $(pwd)"
          ls -la
          echo ""
          echo "Dockerfile location:"
          find . -name "Dockerfile" -type f 2>/dev/null || echo "Dockerfile not found anywhere"
          echo ""
          echo "All files in workspace:"
          find . -type f 2>/dev/null | head -20
      
      - name: Build Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: ./.github-repo/scripts/dockerless-build-action/build-image.sh
      
      - name: Push image to registry
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: ./.github-repo/scripts/dockerless-build-action/push-image.sh
      
      - name: Verify image
        run: ./.github-repo/scripts/dockerless-build-action/verify-image.sh
      
      - name: Cleanup
        if: always()
        run: ./.github-repo/scripts/dockerless-build-action/cleanup.sh
